
/*******************************************************************
El código que se expone a continuación corresponde a Módulos Remotos
compuestos por un Node Mcu (ESP8266)encargados de obtener datos de: 
            1º Humedad del aire (%).
            2º Temperatura (ºC).
            3º Humedad del suelo (%).
Toda la información recopilada por el módulo podrá ser visualizada a 
través de la app móvil Blynk (http://www.blynk.cc)

Blynk setup:
Mostrar valores asociados a V5 (Humedad del aire)
Mostrar valores asociados a V6 (Temperatura del aire)
Mostrar valores asociados a V7 (Humedad del suelo)
*********************************************************************/
// Realizar este comentario para evitar comunicación serial de la app
// Blynk con el Node Mcu.

#define BLYNK_PRINT Serial 

/********************************************************************/
/************************Librerías Incluidas*************************/
/********************************************************************/

#include <SD.h> // Tarjeta SD
#include <SPI.h> // Tarjeta SD
#include <ESP8266WiFi.h> // Node Mcu
#include <BlynkSimpleEsp8266.h> // APP Blynk (Consulta sensores)
#include <SimpleTimer.h> // Temporizador
#include <DHT.h> // Sensor DHT Temperatura y humedad

// Código de autentificación proporcionado por la aplicación Blynk
// APP Blynk -> Project -> Project Settings -> Auth Tokens -> Copy 
// all.

char auth[] = "8aec67bed21d4c2b86a69256297ef3a1";

// SSID y contraseña de la red WiFi a utilizar
// Si se trata de una red de uso libre pass[] = ""

char ssid[] = "Q6JAVIER";
char pass[] = "1234567890";
// char pass[] = "";

#define SD_PIN  15 // SD conectada al pin digital 15 (D8) del Node                       //Mcu. 

// Definir el tipo de sensor Temperatura y Humedad que se está 
// utilizando y su pin 
//#define DHTTYPE DHT11     // DHT 11
#define DHTTYPE DHT22   // DHT 22, AM2302, AM2321
//#define DHTTYPE DHT21   // DHT 21, AM2301
#define DHTPIN 2 // Sensor DHT conectado al PIN 2 (D4) del Node Mcu. 
DHT dht(DHTPIN, DHTTYPE);
SimpleTimer timer; 

int sense_Pin = 0; // Sensor de humedad del suelo conectado al PIN 0 
                   // (A0)
int value = 0; // Definimos val=0 para obtener posteriormente los  
               // valores de lectura del sensor de humedad del suelo,
int led = 5; // Led situado en el pin digital 5 (D1)

WiFiServer server(80); // Definimos al Módulo Remoto como Servidor.

void setup()
{
  Serial.begin(9600); // Esta conexión debe coincidir con la del 
                      // monitor serial.
  WiFi.disconnect(); // El Módulo Remoto se conecta a la red WiFi
  delay(3000);
   WiFi.begin("Q6JAVIER","1234567890");
  while ((!(WiFi.status() == WL_CONNECTED))){
    delay(300);
  }
  Serial.println("Módulo Remoto Conectado");
  Serial.println((WiFi.localIP().toString()));
  
  server.begin();   // Se ordena al servidor escuchar peticiones 
                    // entrantes
  // Verificación de que la tarjeta SD está conectada
  Serial.print("Inicialización Tarjeta SD...");
  if (!SD.begin(SD_PIN)) {
    Serial.println("Verificar que la tarjeta SD esté presente");
    return;
  }
  //Si llega a este punto es que la SD ha sido reconocida
  Serial.println("Tarjeta inicializada.");
  Blynk.begin(auth, ssid, pass); // Autentificación Blynk
  dht.begin(); // Inicialización sensor DHT
  pinMode(led, OUTPUT); 
  delay(2000); 
  // Cada 1000 ms (1s) ejecutar void sendSensor
  timer.setInterval(1000L, sendSensor); 

void loop()
{
  Blynk.run(); // Inicializamos la APP Blynk
  timer.run(); // Inicializamos SimpleTimer
  // Recopilación de datos (Temperatura y Humedad del Aire)
  // parte del sensor  DHT 22 y muestra de los mismos en el 
  // monitor serial.
   float h = dht.readHumidity();
   float t = dht.readTemperature();         
   Serial.print("Humedad del Aire = ");
   Serial.print(h);
   Serial.println("%  ");
   Serial.print("Temperatura = ");
   Serial.print(t); 
   Serial.println("ºC  ");
   // Recopilación de datos por parte del sensor de Humedad 
   // del Suelo. y muestra de los mismos en el monitor serial.
   Serial.print("Humedad del Suelo : ");
   value= analogRead(sense_Pin);
   value=(value/6); 
   // El sensor muestra datos entre 0 (totalmente seco) y 600 
   // (agu)por por lo que para expresar los datos en % entre 
   // 0 y 100 dividimos los datos "vírgenes" entre 6
   Serial.print(value);
   Serial.println("%  ");
   // Guardamos los valores de temperatura, humedad y humedad
   // de suelo en la tarjeta micro SD
   File dataFile = SD.open("SD.txt", FILE_WRITE);
  // Si el archivo ha sido abierto correctamente se escriben 
  // los datos en el
  if (dataFile) {
    Serial.println("Apertura de archivo correcta");
      dataFile.print(h);
      dataFile.print(" | ");
      dataFile.println(t);
      dataFile.print(" | ");
      dataFile.println(value);
      //Despues de copiar los datos, se cierra el archivo
      dataFile.close();
  }

  else {
    Serial.println("No puede abrirse el archivo SD.txt");
  }
   delay(2000);
   // Parpadeo del LED que indica el correcto funcionamiento del 
   // Módulo Remoto
   digitalWrite(led, HIGH); 
   delay(1000); 
   digitalWrite(led, LOW); 
   delay(1000); 

  // El código inferior es el encargado de responder al Módulo Central
  //(Cliente un mensaje que contenga el valor de humedad del suelo 
  // medido por el sensor de Módulo Remoto (Server)
   WiFiClient client = server.available();
   if (!client) { return; }
   while(!client.available()){  delay(1); }
   client.println("HTTP/1.1 200 OK");
   client.println("Content-Type: text/html");
   client.println("");
   client.println("<!DOCTYPE HTML>");
   client.println("<html>");
   client.println(analogRead(A0));
   client.println("</html>");
   client.stop();
   Serial.print(analogRead(A0));
   delay(5000);
}



// Esta función (void sendSensor) será la encargada de enviar los 
// valores de lectura de los sensores a los pines virtuales de la 
// app Blynk (V5, V6, V7). En la aplicación puede escogerse la 
// frecuencia con la que se desean recibir estos datos

void sendSensor()
{
  // Recopilación de datos por parte del sensor DHT 22 que mide
  // Humedad del Aire y Temperatura.
  float h = dht.readHumidity();
  float t = dht.readTemperature(); // o dht.readTemperature(true) 
                                   // para grados Fahrenheit
  value= analogRead(sense_Pin);
  value=(value/6); // El sensor muestra valores entre 0 (totalmente
                   // seco) y 600 (agua) por lo que para expresar 
                   // los datos en % dividimos los datos "vírgenes"
                   // entre 6

  if (isnan(h) || isnan(t)) {
    Serial.println("Error al leer el sensor DHT!");
    return;
  }
  // 
  // No es recomendable mandar más de 10 valores por segundo
  Blynk.virtualWrite(V5, h);
  Blynk.virtualWrite(V6, t);
  Blynk.virtualWrite(V7, value);
}
